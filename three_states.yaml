# There are three states: A, B and C
# whose demand is 5000, 7000 and 4000 (MWh peer year)


name: three_states
objective: max

domains:
  new_capacity_to_be_installed:
    values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

  max_transmission_capacity_A_B:
    values: [0, 500, 1000, 1500, 2000]
  max_transmission_capacity_B_C:
    values: [0, 500, 1000, 1500]

variables:
  solarCapacityA:
    domain: new_capacity_to_be_installed
    agent: a1
  solarCapacityB:
    domain: new_capacity_to_be_installed
    agent: a2
  solarCapacityC:
    domain: new_capacity_to_be_installed
    agent: a3

  gasCapacityA:
    domain: new_capacity_to_be_installed
    agent: b1
  gasCapacityB:
    domain: new_capacity_to_be_installed
    agent: b2
  gasCapacityC:
    domain: new_capacity_to_be_installed
    agent: b3

  transmissionAB:
    domain: max_transmission_capacity_A_B
    agent: c1
  transmissionBA:
    domain: max_transmission_capacity_A_B
    agent: c2
  transmissionBC:
    domain: max_transmission_capacity_B_C
    agent: c3
  transmissionCB:
    domain: max_transmission_capacity_B_C
    agent: c4

constraints:
  # Demand constraints
    demand_A:
      type: intention
      function: |
        if solarCapacityA * 1000 + gasCapacityA * 8760 + transmissionBA - transmissionAB >= 5000:
          return 10000
        else: 
          return 0
    demand_B:
      type: intention
      function: |
        if solarCapacityB * 1000 + gasCapacityB * 8760 - transmissionBA + transmissionAB - transmissionBC + transmissionCB >= 7000:
          return 10000
        else: 
          return 0          
    demand_C:
      type: intention
      function: |
        if solarCapacityB * 1000 + gasCapacityB * 8760 + transmissionBC - transmissionCB >= 4000:
          return 10000
        else: 
          return 0
  
  # Limits on the Capacity to install
    gas_installed_capacity_A:
      type: intention
      function: |
        if gasCapacityA >= 1:
          return 10000
        else:
          return 0
    gas_installed_capacity_B:
      type: intention
      function: |
        if gasCapacityB >= 2:
          return 10000
        else:
          return 0
    gas_installed_capacity_C:
      type: intention
      function: |
        if gasCapacityC >= 1:
          return 10000
        else:
          return 0
    solar_installed_capacity_A:
      type: intention
      function: |
        if solarCapacityA <= 5:
          return 10000
        else:
          return 0
    solar_installed_capacity_B:
      type: intention
      function: |
        if solarCapacityB <= 2:
          return 10000
        else:
          return 0 
    solar_installed_capacity_C:
      type: intention
      function: |
        if solarCapacityC <= 8:
          return 10000
        else:
          return 0

  # Emission Cap
    total_emissions:
      type: intention
      function: |
        if (gasCapacityA + gasCapacityB + gasCapacityC) * 8760 * 0.5 <= 200000:
          return 10000
        else:
          return 0

  # Total cost to minimize


agents: [a1, a2, a3, b1, b2, b3, c1, c2, c3, c4]
